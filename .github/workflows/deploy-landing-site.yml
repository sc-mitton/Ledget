name: Deploy Landing Site

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      src: ${{ steps.changes.outputs.src }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            src:
                - './front/apps/landing/**'
  build:
    if: ${{ needs.changes.outputs.src == 'true' || github.event_name == 'workflow_dispatch' }}
    needs: changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [1]
    defaults:
      run:
        working-directory: ./front/apps/landing
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: bun setup
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.1.21
      - name: Get bun store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(bun store path --silent)" >> $GITHUB_ENV
      - name: Setup bun cache
        uses: actions/cache@v3
        env:
          STORE_PATH: ${{ env.STORE_PATH }}
        with:
          path: ${{env.STORE_PATH}}
          key: ${{ runner.os }}-bun-store-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-store-
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Build
        run: bun run build --mode ${{ inputs.environment }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "arn:aws:iam::905418323334:role/gh-actions"
          aws-region: "us-west-2"
      - name: Deploy to S3
        run: aws s3 sync --delete ./dist/ s3://ledget.app/v${{ matrix.version }}
      - name: Create CloudFront invalidation
        uses: ./.github/actions/invalidate-cloudfront
        with:
          distribution: "ledget.app"
