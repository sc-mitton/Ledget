name: Rest Api Pipeline

on:
    push:
      branches: [ "main", "uat", "dev" ]
    pull_request:
      branches: [ "main", "uat", "dev" ]
    workflow_dispatch:
      inputs:
        run_all:
          description: 'Run all jobs'
          required: false
          default: false
          type: 'boolean'
permissions:
  id-token: write
  contents: read

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      src: ${{ steps.changes.outputs.src }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          src:
              - './back/**'
  test:
    needs: changes
    if: ${{ needs.changes.outputs.src == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.run_all == true) }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.11]
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Checkout
      uses: actions/checkout@v4
    - name: Test
      run: >
        docker-compose -f docker-compose.test.yml run --rm restapi sh -c "
          python manage.py makemigrations &&
          python manage.py migrate &&
          python manage.py test"
    - name: Lint
      run: docker-compose -f docker-compose.test.yml run --rm restapi sh -c "flake8 --config=.flake8"
  build:
    # Don't build if pushing to dev branch
    if: ${{ github.ref != 'refs/heads/dev' }}
    name: "Build and Push to ECR"
    needs: test
    runs-on: ubuntu-latest
    # Build and push to correct ECR based on the branch
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Build and push
        uses: ./.github/actions/build-and-push
        with:
          tag: ledget-rest-api
          version: 1
          context: ./back
          role: ${{ github.ref == 'refs/heads/main' && 'arn:aws:iam::905418323334:role/gh-actions' || github.ref == 'refs/heads/uat' && 'replace me' }}
          environment: ${{ github.ref == 'refs/heads/main' && 'prod' || github.ref == 'refs/heads/uat' && 'uat'}}
  deploy:
    # Don't deploy if pushing to dev branch
    if: ${{ github.ref != 'refs/heads/dev' }}
    name: "Deploy Elastic Beanstalk Environment"
    needs: build
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        region: [us-west-2]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: 'arn:aws:iam::905418323334:role/gh-actions'
          aws-region: "us-west-2"
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true
      - name: Install EB CLI
        run: |
          sudo apt-get install python3-pip
          pip3 install awsebcli --upgrade
      - name: Initialize EB CLI
        env:
          REGION: ${{ matrix.region }}
        run: ${{ github.ref == 'refs/heads/main' && 'eb init restapi-prod --region $REGION' || github.ref == 'refs/heads/uat' && 'eb init -p python-3.8 restapi-uat --region $REGION' }}
      - name: Deploy to Elastic Beanstalk
        env:
          REGION: "us-west-2"
        run: echo "N" | ${{ github.ref == 'refs/heads/main' && 'eb deploy restapi-prod' || github.ref == 'refs/heads/uat' && 'eb deploy restapi-uat' }}
