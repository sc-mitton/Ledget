name: Oathkeeper pipeline

on:
    push:
      branches: [ "main", "uat" ]
    pull_request:
      branches: [ "main", "uat" ]
    workflow_dispatch:
      inputs:
        run_all:
          description: 'Run all jobs'
          required: false
          default: false
          type: 'boolean'
permissions:
  id-token: write
  contents: read

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      src: ${{ steps.changes.outputs.src }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          src:
              - './oathkeeper/**'
  build:
    name: "Build and deploy authorizer"
    if: ${{ needs.changes.outputs.src == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.run_all == true) }}
    needs: changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build go executable
        run: |
          cd oathkeeper
          GOOS=linux GOARCH=arm64 go build -tags lambda.norpc -o bootstrap main.go
      - name: Render jsonnet
        uses: alexdglover/jsonnet-render@v2
        with:
          file: ./oathkeeper/rules.jsonnet
          output_file: ./oathkeeper/rules.json
          params: ${{ github.ref == 'refs/heads/main' && 'domain=ledget.app' || 'domain=uat.ledget.app' }}  version=1
      - name: Zip the files and layers
        working-directory: ./oathkeeper
        run: |
          mkdir -p out &&
          zip -r out/authorizer.zip bootstrap &&
          mkdir -p out/lib &&
          mv config.yml lib/config.yml &&
          mv rules.json lib/rules.json &&
          zip -r out/oathkeeper-layers.zip lib
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ github.ref == 'refs/heads/main' && 'arn:aws:iam::905418323334:role/gh-actions' || github.ref == 'refs/heads/uat' && 'replace me' }}
          aws-region: "us-west-2"
      - name: Copy zip to s3
        working-directory: ./oathkeeper/out
        run: |
          aws s3 sync --delete . s3://oathkeeper-authorization
