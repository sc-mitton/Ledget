name: Web App Pipeline

on:
  push:
    branches: [ "main", "uat" ]
  pull_request:
    branches: [ "main", "uat" ]
permissions:
  id-token: write
  contents: read

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      output1: ${{ steps.changes.outputs.output1 }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            output1:
              - './back/**'
  install:
    needs: changes
    if: ${{ needs.changes.outputs.output1 == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use node 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.15.1
      - run: npm ci
  build:
    needs: install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.x ]
    steps:
      - uses: actions/checkout@v3
      - name: Use node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run build
  test:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Dummy Test
        run: echo "Dummy Test"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Dummy Build
        run: echo "Dummy Build"
