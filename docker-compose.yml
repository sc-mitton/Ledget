version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    secrets:
      - postgres_user
      - postgres_password
    volumes:
      - dev-db-data:/var/lib/postgresql/data/
  api:
    build:
      args:
        - DEV=true
      context: ./back
    command: >
      sh -c "
        python manage.py wait_for_db &&
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py runsslserver --cert /etc/ssl/certs/ledget.app.crt --key /etc/ssl/private/ledget.app.key"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_PORT=5432
    volumes:
      - ./certs/ledget.app.crt:/etc/ssl/certs/ledget.app.crt
      - ./certs/ledget.app.key:/etc/ssl/private/ledget.app.key
      - ./logs:/api/logs
    secrets:
      - stripe_webhook_secret
      - stripe_api_key
      - django_secret_key
      - postgres_user
      - postgres_password
    depends_on:
      - db
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`ledget.app`)
      - traefik.http.routers.api.entrypoints=websecure
  # proxy:
  #   image: traefik:v2.10
  #   command: |
  #     --api.insecure=true
  #     --providers.docker=true
  #     --providers.docker.exposedbydefault=false
  #     --entrypoints.api.address=:8000
  #   ports:
  #     - 8000:8000
  #     - 8080:8080
  #   volumes:
  #     - doker-events:/var/run/docker.sock:/var/run/docker.sock
  #     - ./certs
  oathkeeper:
    build:
      context: ./oathkeeper
  app:
    build:
      args:
        - APP=home
        - PORT=3000
      context: ./app
      dockerfile: Dockerfile.dev
    volumes:
      - ./certs/localhost.crt:/etc/ssl/certs/localhost.crt
      - ./certs/localhost.key:/etc/ssl/private/localhost.key
      - ./certs/ledgetCA.pem:/usr/local/share/ca-certificates/ledgetCA.pem
    ports:
      - 3000:3000
  portal:
    build:
      args:
        - APP=portal
        - PORT=3001
      context: ./app
      dockerfile: Dockerfile.dev
    ports:
      - 3001:3001
    volumes:
      - ./certs/localhost.crt:/etc/ssl/certs/localhost.crt
      - ./certs/localhost.key:/etc/ssl/private/localhost.key
      - ./certs/ledgetCA.pem:/usr/local/share/ca-certificates/ledgetCA.pem
  ory:
    build:
      context: ./ory
    ports:
      - "4000:4000"
    command: >
      sh -c "
        /orylogin.sh /run/secrets/ory_email /run/secrets/ory_password &&
        ory tunnel --dev --project reverent-lewin-bqqp1o2zws https://localhost:3000"
    secrets:
      - ory_email
      - ory_password

volumes:
  dev-db-data:
  doker-events:


secrets:
  postgres_user:
    file: ./secrets/postgres_user
  postgres_password:
    file: ./secrets/postgres_password
  stripe_webhook_secret:
    file: ./secrets/stripe_webhook_secret
  stripe_api_key:
    file: ./secrets/stripe_api_key
  django_secret_key:
    file: ./secrets/django_secret_key
  ory_email:
    file: ./secrets/ory_email
  ory_password:
    file: ./secrets/ory_password
