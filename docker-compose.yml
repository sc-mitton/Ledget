version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    secrets:
      - postgres_user
      - postgres_password
    volumes:
      - dev-db-data:/var/lib/postgresql/data/
  oathkeeper:
    build:
      context: ./oathkeeper
    command: serve --config /config.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oathkeeper.rule=Host(`oathkeeper`)"
      - "traefik.http.routers.oathkeeper.entrypoints=web"
      - "traefik.http.routers.oathkeeper.service=oathkeeper"
      - "traefik.http.services.oathkeeper.loadbalancer.server.port=4456"
      - "traefik.http.middlewares.oathkeeper.forwardauth.address=http://oathkeeper:4456/decisions"
      - "traefik.http.middlewares.oathkeeper.forwardauth.authResponseHeaders=X-User"
  proxy:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/traefik"
      - "--providers.file.watch=true"
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - ./certs-back:/etc/ssl/certs
      - ./traefik:/traefik
      - /var/run/docker.sock:/var/run/docker.sock
  api:
    build:
      args:
        - DEV=true
      context: ./back
    command: >
      sh -c "
        python manage.py wait_for_db &&
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`ledget.app`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.middlewares=oathkeeper@docker"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_PORT=5432
    volumes:
      - ./back/api:/api
      - ./certs-back:/etc/ssl/certs
      - ./logs:/api/logs
    secrets:
      - stripe_webhook_secret
      - stripe_api_key
      - django_secret_key
      - postgres_user
      - postgres_password
    depends_on:
      - db
  app:
    build:
      args:
        - APP=home
        - PORT=3000
      context: ./app
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    volumes:
      - ./app/home/src:/home/src
    secrets:
      - localhost_crt
      - localhost_key
      - ca_pem
  portal:
    build:
      args:
        - APP=portal
        - PORT=3001
      context: ./app
      dockerfile: Dockerfile.dev
    ports:
      - 3001:3001
    volumes:
      - ./app/portal/src:/portal/src
    secrets:
      - localhost_crt
      - localhost_key
      - ca_pem
  ory:
    build:
      context: ./ory
    ports:
      - "4000:4000"
    command: >
      sh -c "
        /orylogin.sh /run/secrets/ory_email /run/secrets/ory_password &&
        ory tunnel --dev --project reverent-lewin-bqqp1o2zws https://localhost:3000"
    secrets:
      - ory_email
      - ory_password
  stripe-listener:
    image: stripe/stripe-cli
    env_file:
      - ./secrets/.env.stripe
    command: listen --forward-to https://ledget.app:8000/api/v1/stripe --skip-verify

volumes:
  dev-db-data:
  doker-events:


secrets:
  postgres_user:
    file: ./secrets/postgres_user
  postgres_password:
    file: ./secrets/postgres_password
  stripe_webhook_secret:
    file: ./secrets/stripe_webhook_secret
  stripe_api_key:
    file: ./secrets/stripe_api_key
  django_secret_key:
    file: ./secrets/django_secret_key
  ory_email:
    file: ./secrets/ory_email
  ory_password:
    file: ./secrets/ory_password
  localhost_crt:
    file: ./certs/localhost.crt
  localhost_key:
    file: ./certs/localhost.key
  ca_pem:
    file: ./certs/ledgetCA.pem
