version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    secrets:
      - postgres_user
      - postgres_password
    volumes:
      - dev-db-data:/var/lib/postgresql/data/
  redis:
    image: redis:7.2.1-alpine
  oathkeeper:
    build:
      context: ./oathkeeper
    command: serve --config /etc/config/oathkeeper/config.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oathkeeper.rule=Host(`oathkeeper`)"
      - "traefik.http.routers.oathkeeper.entrypoints=web"
      - "traefik.http.routers.oathkeeper.service=oathkeeper"
      - "traefik.http.services.oathkeeper.loadbalancer.server.port=4456"
      - "traefik.http.middlewares.oathkeeper.forwardauth.address=http://oathkeeper:4456/decisions"
      - "traefik.http.middlewares.oathkeeper.forwardauth.authResponseHeaders=X-User, Authorization"
    secrets:
      - jwks.json
  proxy:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entryPoints.websecure.forwardedHeaders.insecure"
      # ^^ needed so that we can check ip address of the ory webhook response in the django middleware
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/traefik"
      - "--providers.file.watch=true"
      - "--log.level=DEBUG"
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - ./front/certs:/etc/ssl/certs
      - ./traefik:/traefik
      - /var/run/docker.sock:/var/run/docker.sock
  ledgetback:
    build:
      args:
        - DEV=true
      context: ./back
    command: >
      sh -c "
        python manage.py wait_for_db &&
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.silk.rule=(Host(`localhost`))"
      - "traefik.http.routers.silk.entrypoints=web"
      - "traefik.http.routers.hooks.tls=false"

      - "traefik.http.routers.api.rule=(Host(`localhost`) && PathPrefix(`/api/v1/`))"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.middlewares=oathkeeper,cors"
      - "traefik.http.routers.hooks.rule=(Host(`localhost`) && PathPrefix(`/hooks`))"
      - "traefik.http.routers.hooks.entrypoints=websecure"
      - "traefik.http.routers.hooks.tls=true"
      - "traefik.http.middlewares.hooksIpWhitelist.ipwhitelist.sourcerange=3.18.12.63, 3.130.192.231, 13.235.14.237, 13.235.122.149, 18.211.135.69, 35.154.171.200, 52.15.183.38, 54.88.130.119, 54.88.130.237, 54.187.174.169, 54.187.205.235, 54.187.216.72, 34.22.170.75, 35.242.228.133, 52.21.26.131, 52.21.47.157, 52.41.247.19, 52.88.82.239"
      - "traefik.http.middlewares.hooksIpWhitelist.ipwhitelist.ipstrategy.depth=1"
      - "traefik.http.routers.hooks.middlewares=hooksIpWhitelist@docker"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,POST,PUT,PATCH,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=https://localhost:3000, https://localhost:3001, https://localhost"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=Content-Type, X-CsrfToken"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SILK_DEBUG=true
    volumes:
      - ./back/ledgetback:/ledgetback
    secrets:
      - stripe_webhook_secret
      - stripe_api_key
      - ory_hook_api_key
      - ory_api_key
      - django_secret_key
      - postgres_user
      - postgres_password
      - plaid_api_key
      - plaid_client_id
      - bird_api_key
      - bird_api_key_id
      - bird_signing_key
      - sparkpost_api_key
    depends_on:
      - db
      - redis
    ports:
      - 8000:8000
  celery:
    build:
      context: ./back
    command: celery -A ledgetback worker -l info
    volumes:
      - ./back/ledgetback:/ledgetback
    environment:
      - DEBUG=true
      - DJANGO_ALLOWED_HOSTS=localhost
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SILK_DEBUG=false
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_PORT=5432
    depends_on:
      - redis
      - ledgetback
    secrets:
      - ory_api_key
      - plaid_api_key
      - postgres_user
      - postgres_password
      - plaid_client_id
  ory:
    image: oryd/ory
    ports:
      - 4000:4000
    secrets:
      - ory_tunnel_key
    entrypoint: ''
    command: >
      sh -c "
        export ORY_API_KEY=$$(cat /run/secrets/ory_tunnel_key) &&
        ory tunnel --project reverent-lewin-bqqp1o2zws --allowed-cors-origins https://localhost:3000 https://localhost:3001"
volumes:
  dev-db-data:
  doker-events:


secrets:
  postgres_user:
    file: ./secrets/postgres_user
  postgres_password:
    file: ./secrets/postgres_password
  bird_api_key:
    file: ./secrets/bird_api_key
  bird_api_key_id:
    file: ./secrets/bird_api_key_id
  bird_signing_key:
    file: ./secrets/bird_signing_key
  sparkpost_api_key:
    file: ./secrets/sparkpost_api_key
  stripe_webhook_secret:
    file: ./secrets/stripe_dev_webhook_secret
  stripe_api_key:
    file: ./secrets/stripe_dev_api_key
  plaid_api_key:
    file: ./secrets/plaid_dev_api_key
  plaid_client_id:
    file: ./secrets/plaid_dev_client_id
  django_secret_key:
    file: ./secrets/django_dev_secret_key
  ory_hook_api_key:
    file: ./secrets/ory_hook_api_key
  ory_api_key:
    file: ./secrets/ory_api_key
  ory_tunnel_key:
    file: ./secrets/ory_tunnel_key
  jwks.json:
    file: ./secrets/dev_jwks.json
