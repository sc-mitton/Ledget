.connectionsPage {
  display: flex;
  flex-direction: column;
  height: 100%;
  flex-grow: 1;
  border-radius: inherit;
  box-sizing: border-box;
}

.header {
  padding: 1.25em 0 1.25em 0;
  border-bottom: 1.5px solid var(--border-color-ultra-dim);
  background-color: var(--main-background-color);
  position: sticky;
  top: 0.375em;
  box-shadow: 0 0 16px 8px var(--main-background-color);
  z-index: 2;
  display: flex;

  & > div {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    gap: 0.5em;
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
  }

  &[data-size='small'],
  &[data-size='medium'],
  &[data-size='extra-small'] {
    h1 {
      font-size: 1.25rem;
    }

    justify-content: center;
    padding: 1.25em 0 1em 0;
  }

  &::before {
    content: '';
    inset: 0;
    top: -1em;
    position: absolute;
    z-index: -1;
    background-color: var(--main-background-color);
  }
}

.institution {
  width: 100%;
  margin-top: 1.5em;
  margin-bottom: 1em;
  max-height: 100%;
  position: relative;

  & > div:first-child {
    margin-bottom: 0.75em;
    margin-right: 0.375em;
    padding: 0 0.25em;
    opacity: 1;
    display: flex;
    justify-content: space-between;

    img {
      border-radius: 50%;
    }

    & > div:first-child {
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
  }
}

.accountsList {
  display: flex;
  flex-direction: column;
  height: 100%;
  overflow-y: scroll;
  overflow-x: hidden;
  box-sizing: border-box;
  padding: 1.5em 0;
}

.accounts {
  display: grid;
  grid-template-columns: minmax(0, 1.5fr) minmax(0, 1fr) minmax(0, 1fr);
  row-gap: 0.25em;

  > div {
    align-self: center;

    &:nth-child(6n + 1),
    &:nth-child(6n + 2),
    &:nth-child(6n + 3) {
      background-color: var(--btn-feather-light-gray);
    }

    &:nth-child(3n + 2),
    &:nth-child(3n + 3) {
      color: var(--m-text-secondary);
      padding: 0.375em 0;
      font-size: 0.8rem;
    }

    &:nth-child(3n) {
      padding-right: 1em;
      border-top-right-radius: var(--border-radius2);
      border-bottom-right-radius: var(--border-radius2);
      text-align: right;
    }

    &:nth-child(3n + 1) {
      padding: 0.25em 0;
      padding-left: 0.525em;
      border-top-left-radius: var(--border-radius2);
      border-bottom-left-radius: var(--border-radius2);
    }

    &:nth-child(n + 3):nth-last-child(-n + 3) {
      border-bottom: 0;
    }
  }
}

.tableHeaders {
  padding: 0.375em 0.525em;
  font-weight: var(--fw-bold);
  display: grid;
  grid-template-columns: minmax(0, 1.5fr) minmax(0, 1fr) minmax(0, 1fr);

  > h4:nth-child(3) {
    text-align: right;
  }
}

.confirmModal > div:last-child {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  margin-top: 1.5em;
}

.noConnections {
  font-weight: var(--fw-regular);
  height: calc(100% - 8em);
  display: flex;
  flex-direction: column;
  gap: 0.375em;
  justify-content: center;
  align-items: center;
  color: var(--m-text-secondary);

  div {
    display: flex;
    flex-direction: column;
    align-items: center;
    * {
      color: var(--m-text-secondary);
    }
  }
}

.reconnect {
  position: absolute;
  inset: -1em;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--border-radius3);

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background-color: var(--main-background-color);
    opacity: 0.8;
  }

  button {
    display: flex;
    gap: 0.5em;
  }

  &[data-wiggle='true'] button {
    animation: wiggle 4.5s infinite ease-out;

    * {
      font-weight: var(--fw-bold);
    }
  }

  button svg {
    margin-right: 0.5em;
  }
}

.form {
  display: flex;
  flex-direction: row;
  gap: 0.5em;
  align-items: center;

  button {
    padding: 0.375em 0.75em;
  }

  button:first-of-type {
    color: var(--m-text-secondary);
  }

  button:last-of-type {
    color: var(--red);
  }
}

@keyframes wiggle {
  0% {
    transform: scale(1) rotate(0deg);
  }

  80% {
    transform: scale(1) rotate(0deg);
  }

  85% {
    transform: scale(1.1) rotate(0deg);
  }

  87% {
    transform: scale(1.1) rotate(3deg);
  }

  89% {
    transform: scale(1.1) rotate(-3deg);
  }

  91% {
    transform: scale(1.1) rotate(3deg);
  }

  93% {
    transform: scale(1.1) rotate(-3deg);
  }

  95% {
    transform: scale(1.1) rotate(3deg);
  }

  100% {
    transform: scale(1) rotate(0deg);
  }
}
