---
import Header from '../components/header.astro';
import '../styles/globals.scss';
---

<html lang="en">
  <head>
    <meta
      http-equiv="Content-Security-Policy"
      content=`
        default-src 'self';
        script-src 'self' 'unsafe-inline' 'unsafe-eval' https://app.termly.io ${import.meta.env.HOST} localhost:4321 'sha256-OuwM78SJYm/zsc4rWhl8ZTRGO/1T/SE5TtELSFU0mEE=' 'sha256-C+MFT9uMJPIBROzgRJWxmbJwinQwPQcN4v02Ao5gdvA=';
        script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://app.termly.io ${import.meta.env.HOST} localhost:4321;
        style-src 'unsafe-inline' fonts.googleapis.com 'self' ledget.app localhost:4321;
        img-src 'self' ledget.app localhost data:;
        child-src 'none';
        frame-src 'self' https://app.termly.io;
        font-src 'self' fonts.gstatic.com fonts.googleapis.com;
      `
    />
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Source+Sans+3:ital,wght@0,200..900;1,200..900&display=swap"
      rel="stylesheet"
    />

    <link
      href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap"
      rel="stylesheet"
    />

    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Ledget</title>
  </head>
  <body>
    <div class="main-background"></div>
    <div class="body">
      <Header />
      <main>
        <slot />
      </main>
    </div>
  </body>
  <script>
    import '../scripts/fade-sections.ts';
    const colorSchemeCallback = (colorScheme: 'dark' | 'light') => {
      if (colorScheme === 'dark') {
        document.querySelector('body')?.classList.add(`${colorScheme}`);
        document.querySelector('.body')?.classList.add(`${colorScheme}`);
        document
          .querySelector('.main-background')
          ?.classList.add(`${colorScheme}`);
        document.querySelector('footer')?.classList.add(`${colorScheme}`);
        document.querySelector('footer')?.classList.remove('light');
        document.querySelector('body')?.classList.remove('light');
        document.querySelector('.body')?.classList.remove('light');
        document.querySelector('.main-background')?.classList.remove('light');
      } else {
        document.querySelector('body')?.classList.remove('dark');
        document.querySelector('.body')?.classList.remove('dark');
        document.querySelector('.main-background')?.classList.remove('dark');
        document.querySelector('footer')?.classList.remove('dark');
        document.querySelector('footer')?.classList.add('light');
        document.querySelector('body')?.classList.add('light');
        document.querySelector('.body')?.classList.add('light');
        document.querySelector('.main-background')?.classList.add('light');
        document.querySelector('footer')?.classList.add('light');
      }
    };

    // Add event listener for color scheme changes
    window
      .matchMedia('(prefers-color-scheme: dark)')
      .addEventListener('change', (e) => {
        const colorScheme = e.matches ? 'dark' : 'light';
        colorSchemeCallback(colorScheme);
      });

    const currentColorScheme = window.matchMedia('(prefers-color-scheme: dark)')
      .matches
      ? 'dark'
      : 'light';
    colorSchemeCallback(currentColorScheme);
  </script>
</html>
